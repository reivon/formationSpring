<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:batch="http://www.springframework.org/schema/batch"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/batch
		http://www.springframework.org/schema/batch/spring-batch-2.2.xsd
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	">

    <import resource="../context.xml"/>

    <bean id="reportDto" class="fr.reivon.formation.spring13.ReportDto" scope="prototype"/>

    <!-- Création d'un bean de parsing de fichier csv -->
    <bean id="cvsFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader">
        <property name="resource" value="classpath:cvs/input/report.csv"/>
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <property name="lineTokenizer">
                    <bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
                        <property name="delimiter" value="," />
                        <property name="names" value="id,sales,qty,staffName,date"/>
                    </bean>
                </property>
                <property name="fieldSetMapper">
                    <bean class="fr.reivon.formation.spring13.ReportFieldSetMapper"/>
                    <!-- if no data type conversion, use BeanWrapperFieldSetMapper to map by name
                    <bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <property name="prototypeBeanName" value="reportDto" />
                    </bean>
                    -->
                </property>
            </bean>
        </property>
    </bean>

    <!-- Définition du processor -->
    <bean id="itemProcessor" class="fr.reivon.formation.spring13.CustomItemProcessor"/>

    <!-- Définition du writer -->
    <!-- On pourrait créer notre propre writer implémentant ItemWriter<ReportDto> -->
    <bean id="xmlItemWriter" class="org.springframework.batch.item.xml.StaxEventItemWriter">
        <property name="resource" value="file:/home/reivon/report.xml"/>
        <property name="marshaller" ref="reportMarshaller"/>
        <property name="rootTagName" value="reportDto"/>
    </bean>

    <bean id="reportMarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
        <property name="classesToBeBound">
            <list>
                <value>fr.reivon.formation.spring13.ReportDto</value>
            </list>
        </property>
    </bean>

    <!-- Définition du job -->
    <batch:job id="helloWorldJob">
        <batch:step id="step1">
            <batch:tasklet>
                <batch:chunk reader="cvsFileItemReader" processor="itemProcessor" writer="xmlItemWriter" commit-interval="2" />
            </batch:tasklet>
        </batch:step>
    </batch:job>

</beans>